# General workflow to build Metal

name: Metal build

on:
  workflow_dispatch:
    inputs:
      doRelease:
        description: 'Do release'
        required: false
        type: boolean
      javaVersion:
        description: 'Java version'
        required: true
        default: '11'
        type: choice
        options:
          - '11'
          - '17'
      javaDistribution:
        description: 'Java distribution'
        required: true
        default: 'corretto'
        type: choice
        options:
          - 'corretto'
          - 'temurin'


jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' && ${{ inputs.doRelease }}
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.javaVersion }}
          distribution: ${{ inputs.javaDistribution }}

      - name: Update Copyright end year to current year.
        run: |
          echo Update headers.
          fd ".java|README.md" | while read -r file; do sed -E -i "s/Copyright ([0-9]{4})-[0-9]{4} (.*)/Copyright \1-$(date +%Y) \2/g" "$file"; done
          git status

      - name: Update latest release in README
        run: |
          mavenVersion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout); 
          version=${mavenVersion%%-SNAPSHOT};
          echo Update README.
          sed -E -i "s/To use the latest \(.*\) release of Metal/To use the latest \($version\) release of Metal/g" README.md
          sed -E -i "s#<version>.*</version>#<version>$version</version>#g" README.md
          git status

      - name: Commit Changes
        run: |
          git config --global user.name 'Your Name'
          git config --global user.email 'your-username@users.noreply.github.com'
          git commit -am "Update license headers and README.md."
          git push

      - name: Release prepare
        run: mvn -B release:prepare release:clean

      - name: Checkout to latest tag
        run: git checkout $(git describe --tags --abbrev=0)

        # See an example here how artifacts are published : https://github.com/actions/setup-java/blob/v3.11.0/docs/advanced-usage.md#Publishing-using-Apache-Maven
      - name: Set up Apache Maven Central
        uses: actions/setup-java@v4
        with: # running setup-java again overwrites the settings.xml
          java-version: ${{ inputs.javaVersion }}
          distribution: ${{ inputs.javaDistribution }}
          cache: 'maven'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: OSSRH_USERNAME # env variable for username in deploy
          server-password: OSSRH_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Publish to Maven Central Repository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        run: mvn deploy -Prelease

